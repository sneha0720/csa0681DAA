#include <stdio.h>
#include <string.h>
void longestPalindromicSubstring(char* s, char* res)
 {
    int n = strlen(s);
    int table[n][n];
    int maxLength = 1;
    int i, j, k;
    for (i = 0; i < n; i++) 
	{
        for (j = 0; j < n; j++) 
		{
            table[i][j] = 0;
        }
    }
    for (i = 0; i < n; i++)
	 {
        table[i][i] = 1;
    }
    int start = 0;
    for (i = 0; i < n - 1; i++) 
	{
        if (s[i] == s[i + 1])
		
		 {
            table[i][i + 1] = 1;
            start = i;
            maxLength = 2;
        }
    }
    for (k = 3; k <= n; k++) 
	{
        for (i = 0; i < n - k + 1; i++) 
		{
            j = i + k - 1;
            if (table[i + 1][j - 1] && s[i] == s[j]) 
			{
                table[i][j] = 1;
                if (k > maxLength)
				 {
                    start = i;
                    maxLength = k;
                }
            }
        }
    }
    strncpy(res, s + start, maxLength);
    res[maxLength] = '\0';
}
int main()
 {
    char s[] = "cbbd";
    char res[100];
    longestPalindromicSubstring(s, res);
    printf("Longest palindromic substring: %s\n", res);

    return 0;
}
