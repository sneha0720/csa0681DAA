#include <stdio.h>
double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size) 
{
    int merged[nums1Size + nums2Size];
    int i = 0, j = 0, k = 0;
    while (i < nums1Size && j < nums2Size)
	 {
        if (nums1[i] < nums2[j]) 
		{
            merged[k++] = nums1[i++];
        } else {
            merged[k++] = nums2[j++];
        }
    }
    while (i < nums1Size)
	 {
        merged[k++] = nums1[i++];
    }
    while (j < nums2Size)
	 {
        merged[k++] = nums2[j++];
    }
    int totalSize = nums1Size + nums2Size;
    if (totalSize % 2 == 0) 
	{
        return (merged[totalSize / 2 - 1] + merged[totalSize / 2]) / 2.0;
    } else 
	{
        return merged[totalSize / 2];
    }
}

int main() {
    int nums1[] = {1,2,3};
    int nums2[] = {1,2,3,4};
    int nums1Size = sizeof(nums1) / sizeof(nums1[0]);
    int nums2Size = sizeof(nums2) / sizeof(nums2[0]);

    double median = findMedianSortedArrays(nums1, nums1Size, nums2, nums2Size);
    printf("Median: %f\n", median);

    return 0;
}
